====================
 Flobot Client Code
====================

javascript
==========

This is the client which the device serves up to the web browser ... it does
most of the actual work.  It is entirely self-contained with no libraries,
mostly because I'm a bit of a vanillajs hipster but also because the device
has limited storage space and I want it to work independently of the Internet ...
if the device is being used in AP mode then the real Internet is most likely
not available to the client!  Also if you have many devices talking to a 
WiFi cell ... it may not have an uplink at all, or that uplink might be slow
or expensive.  Anyway, so far this hasn't held me back too badly.  Although I've
played around with Ractive.js and d3.js I haven't felt they've really added a
lot.

build toolchain
===============

The other thing there isn't is a big build toolchain.  The esp8266 directory
has a Makefile which picks these files up and compresses them into the
on-flash filesystem.  Given the compression, minification isn't such a big
deal.  Anyway, reading the sources might be interesting to someone, 
sometime.  If I ever need to, the Makefile could also run minification on the
JS, CSS, HTML files.

opcodes.json
============

This is generated by stripping out all the lines starting ///// from
../esp8266/vm/virtual.c ... it makes the metadata for the VM available
to the JS code.


